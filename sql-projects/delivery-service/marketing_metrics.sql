-- 1.
-- На основе таблицы user_actions рассчитана метрика CAC для двух рекламных кампаний
SELECT ads_campaign,
       ROUND(250000::decimal / users_cnt, 2) AS CAC
FROM (SELECT ads_campaign,
             COUNT(user_id) AS users_cnt
      FROM (SELECT DISTINCT user_id,
                   ads_campaign
            FROM (SELECT user_id,
	                     order_id,
	                     action,
	                     time,
	                     CASE
	   	                     WHEN user_id IN (8631, 8632, 8638, 8643, 8657, 8673, 8706, 8707, 8715, 8723, 8732, 8739, 8741, 
                                              8750, 8751, 8752, 8770, 8774, 8788, 8791, 8804, 8810, 8815, 8828, 8830, 8845, 
                                              8853, 8859, 8867, 8869, 8876, 8879, 8883, 8896, 8909, 8911, 8933, 8940, 8972, 
                                              8976, 8988, 8990, 9002, 9004, 9009, 9019, 9020, 9035, 9036, 9061, 9069, 9071, 
                                              9075, 9081, 9085, 9089, 9108, 9113, 9144, 9145, 9146, 9162, 9165, 9167, 9175, 
                                              9180, 9182, 9197, 9198, 9210, 9223, 9251, 9257, 9278, 9287, 9291, 9313, 9317, 
                                              9321, 9334, 9351, 9391, 9398, 9414, 9420, 9422, 9431, 9450, 9451, 9454, 9472, 
                                              9476, 9478, 9491, 9494, 9505, 9512, 9518, 9524, 9526, 9528, 9531, 9535, 9550, 
                                              9559, 9561, 9562, 9599, 9603, 9605, 9611, 9612, 9615, 9625, 9633, 9652, 9654, 
                                              9655, 9660, 9662, 9667, 9677, 9679, 9689, 9695, 9720, 9726, 9739, 9740, 9762, 
                                              9778, 9786, 9794, 9804, 9810, 9813, 9818, 9828, 9831, 9836, 9838, 9845, 9871, 
                                              9887, 9891, 9896, 9897, 9916, 9945, 9960, 9963, 9965, 9968, 9971, 9993, 9998, 
                                              9999, 10001, 10013, 10016, 10023, 10030, 10051, 10057, 10064, 10082, 10103, 
                                              10105, 10122, 10134, 10135) THEN 'Кампания № 1'
                             WHEN user_id IN (8629, 8630, 8644, 8646, 8650, 8655, 8659, 8660, 8663, 8665, 8670, 8675, 8680, 8681, 
                                              8682, 8683, 8694, 8697, 8700, 8704, 8712, 8713, 8719, 8729, 8733, 8742, 8748, 8754, 
                                              8771, 8794, 8795, 8798, 8803, 8805, 8806, 8812, 8814, 8825, 8827, 8838, 8849, 8851, 
                                              8854, 8855, 8870, 8878, 8882, 8886, 8890, 8893, 8900, 8902, 8913, 8916, 8923, 8929, 
                                              8935, 8942, 8943, 8949, 8953, 8955, 8966, 8968, 8971, 8973, 8980, 8995, 8999, 9000, 
                                              9007, 9013, 9041, 9042, 9047, 9064, 9068, 9077, 9082, 9083, 9095, 9103, 9109, 9117, 
                                              9123, 9127, 9131, 9137, 9140, 9149, 9161, 9179, 9181, 9183, 9185, 9190, 9196, 9203, 
                                              9207, 9226, 9227, 9229, 9230, 9231, 9250, 9255, 9259, 9267, 9273, 9281, 9282, 9289, 
                                              9292, 9303, 9310, 9312, 9315, 9327, 9333, 9335, 9337, 9343, 9356, 9368, 9370, 9383, 
                                              9392, 9404, 9410, 9421, 9428, 9432, 9437, 9468, 9479, 9483, 9485, 9492, 9495, 9497, 
                                              9498, 9500, 9510, 9527, 9529, 9530, 9538, 9539, 9545, 9557, 9558, 9560, 9564, 9567, 
                                              9570, 9591, 9596, 9598, 9616, 9631, 9634, 9635, 9636, 9658, 9666, 9672, 9684, 9692, 
                                              9700, 9704, 9706, 9711, 9719, 9727, 9735, 9741, 9744, 9749, 9752, 9753, 9755, 9757, 
                                              9764, 9783, 9784, 9788, 9790, 9808, 9820, 9839, 9841, 9843, 9853, 9855, 9859, 9863, 
                                              9877, 9879, 9880, 9882, 9883, 9885, 9901, 9904, 9908, 9910, 9912, 9920, 9929, 9930, 
                                              9935, 9939, 9958, 9959, 9961, 9983, 10027, 10033, 10038, 10045, 10047, 10048, 10058, 
                                              10059, 10067, 10069, 10073, 10075, 10078, 10079, 10081, 10092, 10106, 10110, 10113, 10131) THEN 'Кампания № 2'
                             ELSE 'no_campaign'
	                         END AS ads_campaign
                  FROM user_actions
                  WHERE order_id NOT IN (SELECT order_id
                                         FROM user_actions
                                         WHERE action = 'cancel_order')) AS t
      WHERE ads_campaign <> 'no_campaign') AS t2
      GROUP BY 1) AS t3;
--
-- у второй рекламной компании затраты на привлечение покупателей оказались ниже
     
     
     
-- 2.
-- рассчитан ROI для каждого рекламного канала
WITH
-- привлечённые рекламными кампаниями покупатели и их заказы
attracted_users AS (SELECT user_id,
                           order_id,
                           ads_campaign
                    FROM (SELECT user_id,
	                             order_id,
	                             action,
	                             time,
	                             CASE
	   	                             WHEN user_id IN (8631, 8632, 8638, 8643, 8657, 8673, 8706, 8707, 8715, 8723, 8732, 8739, 8741, 
                                                      8750, 8751, 8752, 8770, 8774, 8788, 8791, 8804, 8810, 8815, 8828, 8830, 8845, 
                                                      8853, 8859, 8867, 8869, 8876, 8879, 8883, 8896, 8909, 8911, 8933, 8940, 8972, 
                                                      8976, 8988, 8990, 9002, 9004, 9009, 9019, 9020, 9035, 9036, 9061, 9069, 9071, 
                                                      9075, 9081, 9085, 9089, 9108, 9113, 9144, 9145, 9146, 9162, 9165, 9167, 9175, 
                                                      9180, 9182, 9197, 9198, 9210, 9223, 9251, 9257, 9278, 9287, 9291, 9313, 9317, 
                                                      9321, 9334, 9351, 9391, 9398, 9414, 9420, 9422, 9431, 9450, 9451, 9454, 9472, 
                                                      9476, 9478, 9491, 9494, 9505, 9512, 9518, 9524, 9526, 9528, 9531, 9535, 9550, 
                                                      9559, 9561, 9562, 9599, 9603, 9605, 9611, 9612, 9615, 9625, 9633, 9652, 9654, 
                                                      9655, 9660, 9662, 9667, 9677, 9679, 9689, 9695, 9720, 9726, 9739, 9740, 9762, 
                                                      9778, 9786, 9794, 9804, 9810, 9813, 9818, 9828, 9831, 9836, 9838, 9845, 9871, 
                                                      9887, 9891, 9896, 9897, 9916, 9945, 9960, 9963, 9965, 9968, 9971, 9993, 9998, 
                                                      9999, 10001, 10013, 10016, 10023, 10030, 10051, 10057, 10064, 10082, 10103, 
                                                      10105, 10122, 10134, 10135) THEN 'Кампания № 1'
                                     WHEN user_id IN (8629, 8630, 8644, 8646, 8650, 8655, 8659, 8660, 8663, 8665, 8670, 8675, 8680, 8681, 
                                                      8682, 8683, 8694, 8697, 8700, 8704, 8712, 8713, 8719, 8729, 8733, 8742, 8748, 8754, 
                                                      8771, 8794, 8795, 8798, 8803, 8805, 8806, 8812, 8814, 8825, 8827, 8838, 8849, 8851, 
                                                      8854, 8855, 8870, 8878, 8882, 8886, 8890, 8893, 8900, 8902, 8913, 8916, 8923, 8929, 
                                                      8935, 8942, 8943, 8949, 8953, 8955, 8966, 8968, 8971, 8973, 8980, 8995, 8999, 9000, 
                                                      9007, 9013, 9041, 9042, 9047, 9064, 9068, 9077, 9082, 9083, 9095, 9103, 9109, 9117, 
                                                      9123, 9127, 9131, 9137, 9140, 9149, 9161, 9179, 9181, 9183, 9185, 9190, 9196, 9203, 
                                                      9207, 9226, 9227, 9229, 9230, 9231, 9250, 9255, 9259, 9267, 9273, 9281, 9282, 9289, 
                                                      9292, 9303, 9310, 9312, 9315, 9327, 9333, 9335, 9337, 9343, 9356, 9368, 9370, 9383, 
                                                      9392, 9404, 9410, 9421, 9428, 9432, 9437, 9468, 9479, 9483, 9485, 9492, 9495, 9497, 
                                                      9498, 9500, 9510, 9527, 9529, 9530, 9538, 9539, 9545, 9557, 9558, 9560, 9564, 9567, 
                                                      9570, 9591, 9596, 9598, 9616, 9631, 9634, 9635, 9636, 9658, 9666, 9672, 9684, 9692, 
                                                      9700, 9704, 9706, 9711, 9719, 9727, 9735, 9741, 9744, 9749, 9752, 9753, 9755, 9757, 
                                                      9764, 9783, 9784, 9788, 9790, 9808, 9820, 9839, 9841, 9843, 9853, 9855, 9859, 9863, 
                                                      9877, 9879, 9880, 9882, 9883, 9885, 9901, 9904, 9908, 9910, 9912, 9920, 9929, 9930, 
                                                      9935, 9939, 9958, 9959, 9961, 9983, 10027, 10033, 10038, 10045, 10047, 10048, 10058, 
                                                      10059, 10067, 10069, 10073, 10075, 10078, 10079, 10081, 10092, 10106, 10110, 10113, 10131) THEN 'Кампания № 2'
                                     ELSE 'no_campaign'
	                             END AS ads_campaign
                          FROM user_actions
                          WHERE order_id NOT IN (SELECT order_id
                                                 FROM user_actions
                                                 WHERE action = 'cancel_order')) AS t
                    WHERE ads_campaign <> 'no_campaign'),
--
-- выручка по каждому заказу
order_prices AS (SELECT DISTINCT order_id,
                        creation_time,
                        product_ids,
                        SUM(price) OVER (PARTITION BY order_id) AS order_price
                 FROM (SELECT *,
                              UNNEST(product_ids) AS product_id
                       FROM orders
                       WHERE order_id NOT IN (SELECT order_id
                                              FROM user_actions
                                              WHERE action = 'cancel_order')) AS o
                 INNER JOIN products AS p ON o.product_id = p.product_id),
--
-- выручка по каждой рекламной кампании
ads_campaign_revenue AS (SELECT ads_campaign,
                                SUM(order_price) AS revenue
                         FROM attracted_users AS au
                         LEFT JOIN order_prices AS op ON au.order_id = op.order_id
                         GROUP BY ads_campaign),
--
-- ROI по каждой компании
roi AS (SELECT ads_campaign,
               ROUND((revenue - 250000) / 250000 * 100, 2) AS ROI
           FROM ads_campaign_revenue)
SELECT *
FROM roi;
-- Этот блогер-кулинар на Youtube из первой рекламной кампании окупил нашу рекламу и его пользователи принесли нам прибыль.
-- В то время по второму каналу мы не вышли даже в ноль.
-- Поэтому имеет смысл вкладываться именно в первую кампанию.



-- 3.
-- Для каждой рекламной кампании посчитана средняя стоимость заказа привлечённых пользователей за первую неделю использования приложения с 1 по 7 сентября 2022 года.
WITH
-- привлечённые рекламными кампаниями покупатели и их заказы
attracted_users AS (SELECT user_id,
                           order_id,
                           ads_campaign
                    FROM (SELECT user_id,
	                             order_id,
	                             action,
	                             time,
	                             CASE
	   	                             WHEN user_id IN (8631, 8632, 8638, 8643, 8657, 8673, 8706, 8707, 8715, 8723, 8732, 8739, 8741, 
                                                      8750, 8751, 8752, 8770, 8774, 8788, 8791, 8804, 8810, 8815, 8828, 8830, 8845, 
                                                      8853, 8859, 8867, 8869, 8876, 8879, 8883, 8896, 8909, 8911, 8933, 8940, 8972, 
                                                      8976, 8988, 8990, 9002, 9004, 9009, 9019, 9020, 9035, 9036, 9061, 9069, 9071, 
                                                      9075, 9081, 9085, 9089, 9108, 9113, 9144, 9145, 9146, 9162, 9165, 9167, 9175, 
                                                      9180, 9182, 9197, 9198, 9210, 9223, 9251, 9257, 9278, 9287, 9291, 9313, 9317, 
                                                      9321, 9334, 9351, 9391, 9398, 9414, 9420, 9422, 9431, 9450, 9451, 9454, 9472, 
                                                      9476, 9478, 9491, 9494, 9505, 9512, 9518, 9524, 9526, 9528, 9531, 9535, 9550, 
                                                      9559, 9561, 9562, 9599, 9603, 9605, 9611, 9612, 9615, 9625, 9633, 9652, 9654, 
                                                      9655, 9660, 9662, 9667, 9677, 9679, 9689, 9695, 9720, 9726, 9739, 9740, 9762, 
                                                      9778, 9786, 9794, 9804, 9810, 9813, 9818, 9828, 9831, 9836, 9838, 9845, 9871, 
                                                      9887, 9891, 9896, 9897, 9916, 9945, 9960, 9963, 9965, 9968, 9971, 9993, 9998, 
                                                      9999, 10001, 10013, 10016, 10023, 10030, 10051, 10057, 10064, 10082, 10103, 
                                                      10105, 10122, 10134, 10135) THEN 'Кампания № 1'
                                     WHEN user_id IN (8629, 8630, 8644, 8646, 8650, 8655, 8659, 8660, 8663, 8665, 8670, 8675, 8680, 8681, 
                                                      8682, 8683, 8694, 8697, 8700, 8704, 8712, 8713, 8719, 8729, 8733, 8742, 8748, 8754, 
                                                      8771, 8794, 8795, 8798, 8803, 8805, 8806, 8812, 8814, 8825, 8827, 8838, 8849, 8851, 
                                                      8854, 8855, 8870, 8878, 8882, 8886, 8890, 8893, 8900, 8902, 8913, 8916, 8923, 8929, 
                                                      8935, 8942, 8943, 8949, 8953, 8955, 8966, 8968, 8971, 8973, 8980, 8995, 8999, 9000, 
                                                      9007, 9013, 9041, 9042, 9047, 9064, 9068, 9077, 9082, 9083, 9095, 9103, 9109, 9117, 
                                                      9123, 9127, 9131, 9137, 9140, 9149, 9161, 9179, 9181, 9183, 9185, 9190, 9196, 9203, 
                                                      9207, 9226, 9227, 9229, 9230, 9231, 9250, 9255, 9259, 9267, 9273, 9281, 9282, 9289, 
                                                      9292, 9303, 9310, 9312, 9315, 9327, 9333, 9335, 9337, 9343, 9356, 9368, 9370, 9383, 
                                                      9392, 9404, 9410, 9421, 9428, 9432, 9437, 9468, 9479, 9483, 9485, 9492, 9495, 9497, 
                                                      9498, 9500, 9510, 9527, 9529, 9530, 9538, 9539, 9545, 9557, 9558, 9560, 9564, 9567, 
                                                      9570, 9591, 9596, 9598, 9616, 9631, 9634, 9635, 9636, 9658, 9666, 9672, 9684, 9692, 
                                                      9700, 9704, 9706, 9711, 9719, 9727, 9735, 9741, 9744, 9749, 9752, 9753, 9755, 9757, 
                                                      9764, 9783, 9784, 9788, 9790, 9808, 9820, 9839, 9841, 9843, 9853, 9855, 9859, 9863, 
                                                      9877, 9879, 9880, 9882, 9883, 9885, 9901, 9904, 9908, 9910, 9912, 9920, 9929, 9930, 
                                                      9935, 9939, 9958, 9959, 9961, 9983, 10027, 10033, 10038, 10045, 10047, 10048, 10058, 
                                                      10059, 10067, 10069, 10073, 10075, 10078, 10079, 10081, 10092, 10106, 10110, 10113, 10131) THEN 'Кампания № 2'
                                     ELSE 'no_campaign'
	                             END AS ads_campaign
                          FROM user_actions
                          WHERE order_id NOT IN (SELECT order_id
                                                 FROM user_actions
                                                 WHERE action = 'cancel_order')) AS t
                    WHERE ads_campaign <> 'no_campaign'),
--
-- выручка по каждому заказу
order_prices AS (SELECT DISTINCT order_id,
                        creation_time,
                        product_ids,
                        SUM(price) OVER (PARTITION BY order_id) AS order_price
                 FROM (SELECT *,
                              UNNEST(product_ids) AS product_id
                       FROM orders
                       WHERE order_id NOT IN (SELECT order_id
                                              FROM user_actions
                                              WHERE action = 'cancel_order')) AS o
                 INNER JOIN products AS p ON o.product_id = p.product_id),
--
-- средняя стоимость заказов для каждого пользователя
avg_user_receipt AS (SELECT user_id,
                            ads_campaign,
                            AVG(order_price) AS AOV
                     FROM attracted_users AS au
                     LEFT JOIN order_prices AS op ON au.order_id = op.order_id
                     WHERE creation_time::date BETWEEN '2022-09-01' AND '2022-09-07'
                     GROUP BY user_id,
                              ads_campaign)
SELECT ads_campaign,
       ROUND(AVG(aov), 2) AS avg_check 
FROM avg_user_receipt
GROUP BY ads_campaign
ORDER BY avg_check DESC;
-- во второй, убыточной группе, средний чек выше на 9 рублей. 



-- 4.
-- На основе данных в таблице user_actions рассчитан показатель дневного Retention для всех пользователей
WITH
-- профили пользователей
profiles AS (SELECT user_id,
                    MIN(time::date) AS cohort_date,
                    COUNT(user_id) OVER (PARTITION BY MIN(time)::date) AS cohort_size
             FROM user_actions
             GROUP BY user_id),
-- сессии пользователей
sessions AS (SELECT user_id,
                    time::date AS session_date
             FROM user_actions
             GROUP BY user_id,
                      time::date
             ORDER BY user_id),
-- retention rate
retention_rate AS (SELECT cohort_date,
                          session_date,
                          COUNT(p.user_id) AS users_cnt,
                          cohort_size,
                          ROUND(COUNT(p.user_id)::decimal / cohort_size, 2) AS retention_rate
                   FROM profiles AS p
                   JOIN sessions AS s ON p.user_id = s.user_id
                   GROUP BY 1, 2, 4)
--
SELECT DATE_TRUNC('month', cohort_date)::date AS start_month,
       cohort_date AS start_date,
       session_date - cohort_date AS day_number,
       retention_rate AS retention
FROM retention_rate;



-- 5.
-- рассчитан retention для двух групп пользователей из рекламных кампаний.
-- возможно, дело именно в том, что один из каналов привёл более активных и заинтересованных пользователей
WITH
ads_campaign_users AS (SELECT *
                       FROM (SELECT user_id,
	                                time,
	                                CASE
	   	                                WHEN user_id IN (8631, 8632, 8638, 8643, 8657, 8673, 8706, 8707, 8715, 8723, 8732, 8739, 8741, 
                                                         8750, 8751, 8752, 8770, 8774, 8788, 8791, 8804, 8810, 8815, 8828, 8830, 8845, 
                                                         8853, 8859, 8867, 8869, 8876, 8879, 8883, 8896, 8909, 8911, 8933, 8940, 8972, 
                                                         8976, 8988, 8990, 9002, 9004, 9009, 9019, 9020, 9035, 9036, 9061, 9069, 9071, 
                                                         9075, 9081, 9085, 9089, 9108, 9113, 9144, 9145, 9146, 9162, 9165, 9167, 9175, 
                                                         9180, 9182, 9197, 9198, 9210, 9223, 9251, 9257, 9278, 9287, 9291, 9313, 9317, 
                                                         9321, 9334, 9351, 9391, 9398, 9414, 9420, 9422, 9431, 9450, 9451, 9454, 9472, 
                                                         9476, 9478, 9491, 9494, 9505, 9512, 9518, 9524, 9526, 9528, 9531, 9535, 9550, 
                                                         9559, 9561, 9562, 9599, 9603, 9605, 9611, 9612, 9615, 9625, 9633, 9652, 9654, 
                                                         9655, 9660, 9662, 9667, 9677, 9679, 9689, 9695, 9720, 9726, 9739, 9740, 9762, 
                                                         9778, 9786, 9794, 9804, 9810, 9813, 9818, 9828, 9831, 9836, 9838, 9845, 9871, 
                                                         9887, 9891, 9896, 9897, 9916, 9945, 9960, 9963, 9965, 9968, 9971, 9993, 9998, 
                                                         9999, 10001, 10013, 10016, 10023, 10030, 10051, 10057, 10064, 10082, 10103, 
                                                         10105, 10122, 10134, 10135) THEN 'Кампания № 1'
                                        WHEN user_id IN (8629, 8630, 8644, 8646, 8650, 8655, 8659, 8660, 8663, 8665, 8670, 8675, 8680, 8681, 
                                                         8682, 8683, 8694, 8697, 8700, 8704, 8712, 8713, 8719, 8729, 8733, 8742, 8748, 8754, 
                                                         8771, 8794, 8795, 8798, 8803, 8805, 8806, 8812, 8814, 8825, 8827, 8838, 8849, 8851, 
                                                         8854, 8855, 8870, 8878, 8882, 8886, 8890, 8893, 8900, 8902, 8913, 8916, 8923, 8929, 
                                                         8935, 8942, 8943, 8949, 8953, 8955, 8966, 8968, 8971, 8973, 8980, 8995, 8999, 9000, 
                                                         9007, 9013, 9041, 9042, 9047, 9064, 9068, 9077, 9082, 9083, 9095, 9103, 9109, 9117, 
                                                         9123, 9127, 9131, 9137, 9140, 9149, 9161, 9179, 9181, 9183, 9185, 9190, 9196, 9203, 
                                                         9207, 9226, 9227, 9229, 9230, 9231, 9250, 9255, 9259, 9267, 9273, 9281, 9282, 9289, 
                                                         9292, 9303, 9310, 9312, 9315, 9327, 9333, 9335, 9337, 9343, 9356, 9368, 9370, 9383, 
                                                         9392, 9404, 9410, 9421, 9428, 9432, 9437, 9468, 9479, 9483, 9485, 9492, 9495, 9497, 
                                                         9498, 9500, 9510, 9527, 9529, 9530, 9538, 9539, 9545, 9557, 9558, 9560, 9564, 9567, 
                                                         9570, 9591, 9596, 9598, 9616, 9631, 9634, 9635, 9636, 9658, 9666, 9672, 9684, 9692, 
                                                         9700, 9704, 9706, 9711, 9719, 9727, 9735, 9741, 9744, 9749, 9752, 9753, 9755, 9757, 
                                                         9764, 9783, 9784, 9788, 9790, 9808, 9820, 9839, 9841, 9843, 9853, 9855, 9859, 9863, 
                                                         9877, 9879, 9880, 9882, 9883, 9885, 9901, 9904, 9908, 9910, 9912, 9920, 9929, 9930, 
                                                         9935, 9939, 9958, 9959, 9961, 9983, 10027, 10033, 10038, 10045, 10047, 10048, 10058, 
                                                         10059, 10067, 10069, 10073, 10075, 10078, 10079, 10081, 10092, 10106, 10110, 10113, 10131) THEN 'Кампания № 2'
                                        ELSE 'no_campaign'
	                                END AS ads_campaign
                             FROM user_actions) AS t
                       WHERE ads_campaign <> 'no_campaign'),
-- профили пользователей
profiles AS (SELECT ads_campaign,
                    user_id,
                    MIN(time::date) AS cohort_date,
                    COUNT(user_id) OVER (PARTITION BY ads_campaign, MIN(time::date)) AS cohort_size
             FROM ads_campaign_users
             GROUP BY ads_campaign,
                      user_id),
-- сессии пользователей
sessions AS (SELECT ads_campaign,
                    user_id,
                    time::date AS session_date
             FROM ads_campaign_users
             GROUP BY ads_campaign,
                      user_id,
                      session_date
             ORDER BY ads_campaign,
                      session_date),
-- retention rate
retention_rate AS (SELECT p.ads_campaign,
                          cohort_date,
                          session_date,
                          COUNT(s.user_id) AS users_cnt,
                          cohort_size,
                          ROUND(COUNT(s.user_id)::decimal / cohort_size, 2) AS retention_rate
                   FROM profiles AS p
                   JOIN sessions AS s ON p.user_id = s.user_id
                   GROUP BY 1, 2, 3, 5)
-- retention rate первого и седьмого дня рекламных кампаний
SELECT *
FROM (SELECT ads_campaign,
             cohort_date AS start_date,
             session_date - cohort_date AS day_number,
             retention_rate AS retention
      FROM retention_rate) AS t
WHERE day_number IN (0, 1, 7)
ORDER BY ads_campaign,
         day_number;
-- Всё понятно, у первой кампании ROI (14.5) больше, чем у второй, потому что её пользователей получается лучше удержать, они больше вовлечены
        
        
        
-- 6.
-- Рассчитан накопительный ARPPU для обеих рекламных кампаний.
-- Это поможет сравнить его с посчитанной ранее метрикой CAC, чтобы узнать, на какой день доход от заказов покупателей, пришедших после первой рекламной кампании, превысил расходы на их привлечение. 
-- Это нужно, чтобы точно убедиться, что в случае второй рекламной кампании затраты мы пока не окупили.
WITH
--
-- рекламные кампании с ID их пользователей
ads_campaign_users AS (SELECT *
                       FROM (SELECT user_id,
                                    order_id,
	                                time,
	                                CASE
	   	                                WHEN user_id IN (8631, 8632, 8638, 8643, 8657, 8673, 8706, 8707, 8715, 8723, 8732, 8739, 8741, 8750, 8751, 8752, 8770, 8774, 8788, 8791, 8804, 8810, 8815, 8828, 8830, 8845, 8853, 8859, 8867, 8869, 8876, 8879, 8883, 8896, 8909, 8911, 8933, 8940, 8972, 8976, 8988, 8990, 9002, 9004, 9009, 9019, 9020, 9035, 9036, 9061, 9069, 9071, 9075, 9081, 9085, 9089, 9108, 9113, 9144, 9145, 9146, 9162, 9165, 9167, 9175, 9180, 9182, 9197, 9198, 9210, 9223, 9251, 9257, 9278, 9287, 9291, 9313, 9317, 9321, 9334, 9351, 9391, 9398, 9414, 9420, 9422, 9431, 9450, 9451, 9454, 9472, 9476, 9478, 9491, 9494, 9505, 9512, 9518, 9524, 9526, 9528, 9531, 9535, 9550, 9559, 9561, 9562, 9599, 9603, 9605, 9611, 9612, 9615, 9625, 9633, 9652, 9654, 9655, 9660, 9662, 9667, 9677, 9679, 9689, 9695, 9720, 9726, 9739, 9740, 9762, 9778, 9786, 9794, 9804, 9810, 9813, 9818, 9828, 9831, 9836, 9838, 9845, 9871, 9887, 9891, 9896, 9897, 9916, 9945, 9960, 9963, 9965, 9968, 9971, 9993, 9998, 9999, 10001, 10013, 10016, 10023, 10030, 10051, 10057, 10064, 10082, 10103, 10105, 10122, 10134, 10135) THEN 'Кампания № 1'
                                        WHEN user_id IN (8629, 8630, 8644, 8646, 8650, 8655, 8659, 8660, 8663, 8665, 8670, 8675, 8680, 8681, 8682, 8683, 8694, 8697, 8700, 8704, 8712, 8713, 8719, 8729, 8733, 8742, 8748, 8754, 8771, 8794, 8795, 8798, 8803, 8805, 8806, 8812, 8814, 8825, 8827, 8838, 8849, 8851, 8854, 8855, 8870, 8878, 8882, 8886, 8890, 8893, 8900, 8902, 8913, 8916, 8923, 8929, 8935, 8942, 8943, 8949, 8953, 8955, 8966, 8968, 8971, 8973, 8980, 8995, 8999, 9000, 9007, 9013, 9041, 9042, 9047, 9064, 9068, 9077, 9082, 9083, 9095, 9103, 9109, 9117, 9123, 9127, 9131, 9137, 9140, 9149, 9161, 9179, 9181, 9183, 9185, 9190, 9196, 9203, 9207, 9226, 9227, 9229, 9230, 9231, 9250, 9255, 9259, 9267, 9273, 9281, 9282, 9289, 9292, 9303, 9310, 9312, 9315, 9327, 9333, 9335, 9337, 9343, 9356, 9368, 9370, 9383, 9392, 9404, 9410, 9421, 9428, 9432, 9437, 9468, 9479, 9483, 9485, 9492, 9495, 9497, 9498, 9500, 9510, 9527, 9529, 9530, 9538, 9539, 9545, 9557, 9558, 9560, 9564, 9567, 9570, 9591, 9596, 9598, 9616, 9631, 9634, 9635, 9636, 9658, 9666, 9672, 9684, 9692, 9700, 9704, 9706, 9711, 9719, 9727, 9735, 9741, 9744, 9749, 9752, 9753, 9755, 9757, 9764, 9783, 9784, 9788, 9790, 9808, 9820, 9839, 9841, 9843, 9853, 9855, 9859, 9863, 9877, 9879, 9880, 9882, 9883, 9885, 9901, 9904, 9908, 9910, 9912, 9920, 9929, 9930, 9935, 9939, 9958, 9959, 9961, 9983, 10027, 10033, 10038, 10045, 10047, 10048, 10058, 10059, 10067, 10069, 10073, 10075, 10078, 10079, 10081, 10092, 10106, 10110, 10113, 10131) THEN 'Кампания № 2'
                                        ELSE 'no_campaign'
	                                END AS ads_campaign
                            FROM user_actions) AS t1
                            WHERE ads_campaign <> 'no_campaign'),
--
-- заказы и их стоимости
order_prices AS (SELECT DISTINCT order_id,
                        creation_time,
                        product_ids,
                        SUM(price) OVER (PARTITION BY order_id) AS order_price
                 FROM (SELECT *,
                              UNNEST(product_ids) AS product_id
                       FROM orders
                       WHERE order_id NOT IN (SELECT order_id
                                              FROM user_actions
                                              WHERE action = 'cancel_order')) AS o
                 INNER JOIN products AS p ON o.product_id = p.product_id),
--         
-- сколько пользователей привлекли кампании
attracted_users AS (SELECT ads_campaign,
                           COUNT(DISTINCT user_id) AS users_cnt
                    FROM (SELECT user_id,
	                             order_id,
	                             action,
	                             time,
	                             CASE
	   	                             WHEN user_id IN (8631, 8632, 8638, 8643, 8657, 8673, 8706, 8707, 8715, 8723, 8732, 8739, 8741, 8750, 8751, 8752, 8770, 8774, 8788, 8791, 8804, 8810, 8815, 8828, 8830, 8845, 8853, 8859, 8867, 8869, 8876, 8879, 8883, 8896, 8909, 8911, 8933, 8940, 8972, 8976, 8988, 8990, 9002, 9004, 9009, 9019, 9020, 9035, 9036, 9061, 9069, 9071, 9075, 9081, 9085, 9089, 9108, 9113, 9144, 9145, 9146, 9162, 9165, 9167, 9175, 9180, 9182, 9197, 9198, 9210, 9223, 9251, 9257, 9278, 9287, 9291, 9313, 9317, 9321, 9334, 9351, 9391, 9398, 9414, 9420, 9422, 9431, 9450, 9451, 9454, 9472, 9476, 9478, 9491, 9494, 9505, 9512, 9518, 9524, 9526, 9528, 9531, 9535, 9550, 9559, 9561, 9562, 9599, 9603, 9605, 9611, 9612, 9615, 9625, 9633, 9652, 9654, 9655, 9660, 9662, 9667, 9677, 9679, 9689, 9695, 9720, 9726, 9739, 9740, 9762, 9778, 9786, 9794, 9804, 9810, 9813, 9818, 9828, 9831, 9836, 9838, 9845, 9871, 9887, 9891, 9896, 9897, 9916, 9945, 9960, 9963, 9965, 9968, 9971, 9993, 9998, 9999, 10001, 10013, 10016, 10023, 10030, 10051, 10057, 10064, 10082, 10103, 10105, 10122, 10134, 10135) THEN 'Кампания № 1'
                                     WHEN user_id IN (8629, 8630, 8644, 8646, 8650, 8655, 8659, 8660, 8663, 8665, 8670, 8675, 8680, 8681, 8682, 8683, 8694, 8697, 8700, 8704, 8712, 8713, 8719, 8729, 8733, 8742, 8748, 8754, 8771, 8794, 8795, 8798, 8803, 8805, 8806, 8812, 8814, 8825, 8827, 8838, 8849, 8851, 8854, 8855, 8870, 8878, 8882, 8886, 8890, 8893, 8900, 8902, 8913, 8916, 8923, 8929, 8935, 8942, 8943, 8949, 8953, 8955, 8966, 8968, 8971, 8973, 8980, 8995, 8999, 9000, 9007, 9013, 9041, 9042, 9047, 9064, 9068, 9077, 9082, 9083, 9095, 9103, 9109, 9117, 9123, 9127, 9131, 9137, 9140, 9149, 9161, 9179, 9181, 9183, 9185, 9190, 9196, 9203, 9207, 9226, 9227, 9229, 9230, 9231, 9250, 9255, 9259, 9267, 9273, 9281, 9282, 9289, 9292, 9303, 9310, 9312, 9315, 9327, 9333, 9335, 9337, 9343, 9356, 9368, 9370, 9383, 9392, 9404, 9410, 9421, 9428, 9432, 9437, 9468, 9479, 9483, 9485, 9492, 9495, 9497, 9498, 9500, 9510, 9527, 9529, 9530, 9538, 9539, 9545, 9557, 9558, 9560, 9564, 9567, 9570, 9591, 9596, 9598, 9616, 9631, 9634, 9635, 9636, 9658, 9666, 9672, 9684, 9692, 9700, 9704, 9706, 9711, 9719, 9727, 9735, 9741, 9744, 9749, 9752, 9753, 9755, 9757, 9764, 9783, 9784, 9788, 9790, 9808, 9820, 9839, 9841, 9843, 9853, 9855, 9859, 9863, 9877, 9879, 9880, 9882, 9883, 9885, 9901, 9904, 9908, 9910, 9912, 9920, 9929, 9930, 9935, 9939, 9958, 9959, 9961, 9983, 10027, 10033, 10038, 10045, 10047, 10048, 10058, 10059, 10067, 10069, 10073, 10075, 10078, 10079, 10081, 10092, 10106, 10110, 10113, 10131) THEN 'Кампания № 2'
                                     ELSE 'no_campaign'
	                             END AS ads_campaign
                          FROM user_actions
                          WHERE order_id NOT IN (SELECT order_id
                                                       FROM user_actions
                                                       WHERE action = 'cancel_order')) AS t
                    WHERE ads_campaign <> 'no_campaign'
                    GROUP BY 1),
--              
-- CAC кампаний
CAC AS (SELECT ads_campaign,
               ROUND(250000::decimal / users_cnt, 2) AS CAC
        FROM attracted_users),
--
-- для каждой рекламной кампании для каждого дня посчитана суммарная стоимость заказов пользователей, пришедших по соответствующему каналу
revenue_by_campaign AS (SELECT ads_campaign,
                               time::date AS date,
                               revenue
                        FROM (SELECT ads_campaign,
                                     time,
                                     user_id,
                                     SUM(order_price) OVER (PARTITION BY ads_campaign, time::date) AS revenue
                              FROM ads_campaign_users AS ac
                              JOIN order_prices AS op ON ac.order_id = op.order_id) AS t
                        GROUP BY 1, 2, 3),
--
-- объединение таблиц CAC и revenue_by_campaign
CAC_plus_rbc AS (SELECT rbc.ads_campaign,
                     date,
                     cac,
                     revenue
              FROM revenue_by_campaign AS rbc
              LEFT JOIN CAC ON rbc.ads_campaign = cac.ads_campaign),
--
-- рассчёт ARPPU
ARPPU_CAC AS (SELECT ads_campaign,
                     EXTRACT(DAY FROM date)::int - 1 AS day,
                     revenue::decimal / users_cnt AS ARPPU,
                     cac 
              FROM (SELECT hl.ads_campaign,
                           date,
                           cac,
                           revenue,
                           users_cnt
                    FROM CAC_plus_rbc AS hl
                    LEFT JOIN attracted_users AS au ON hl.ads_campaign = au.ads_campaign
                    GROUP BY 1,2,3,4,5) AS t),
--
-- рассчёт кумулятивного ARPPU
cumARPPU_CAC AS (SELECT ads_campaign,
                        'Day ' || day AS day,
                        ROUND(SUM(ARPPU) OVER (PARTITION BY ads_campaign ORDER BY day), 2) AS cumulative_arppu,
                        CAC
                 FROM ARPPU_CAC),
--
-- рассчёт кумулятивного ARPPU для первой кампании
cumARPPU_CAC_1 AS (SELECT *
                   FROM cumARPPU_CAC
                   WHERE ads_campaign = 'Кампания № 1'),
--
-- рассчёт кумулятивного ARPPU для второй кампании
cumARPPU_CAC_2 AS (SELECT *
                   FROM cumARPPU_CAC
                   WHERE ads_campaign = 'Кампания № 2')
SELECT *
FROM cumARPPU_CAC_2
--
-- По графику видно, что первая рекламная кампания начала окупаться на 5-й день, превысив CAC.
-- График показывает, что вторая рекламная кампания ещё не окупилась.